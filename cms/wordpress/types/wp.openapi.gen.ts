
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//


export interface OpenAPI {
  "GET /wp/v2/posts": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar resultados a posts atribuídos a autores específicos.
   */
  author?: number[]
  /**
   * Garantir que o resultado exclui posts atribuídos a autores específicos.
   */
  author_exclude?: number[]
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  /**
   * Limitar resultados com base no relacionamento entre múltiplas taxonomias.
   */
  tax_relation?: ("AND" | "OR")[]
  /**
   * Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia categories.
   */
  categories?: string
  /**
   * Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia categories.
   */
  categories_exclude?: string
  /**
   * Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia tags.
   */
  tags?: string
  /**
   * Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia tags.
   */
  tags_exclude?: string
  /**
   * Limitar resultados de itens que sejam fixos.
   */
  sticky?: boolean
  }
  }
  "POST /wp/v2/posts": {

  }
  "GET /wp/v2/posts/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/posts/:id": {

  }
  "PUT /wp/v2/posts/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * O formato para o post.
   */
  format?: ("standard" | "aside" | "chat" | "gallery" | "link" | "image" | "quote" | "status" | "video" | "audio")[]
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * Se o post deve ser tratado como fixo.
   */
  sticky?: boolean
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  /**
   * Os termos atribuídos ao post na taxonomia category.
   */
  categories?: number[]
  /**
   * Os termos atribuídos ao post na taxonomia post_tag.
   */
  tags?: number[]
  }
  }
  "DELETE /wp/v2/posts/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/posts/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * O formato para o post.
   */
  format?: ("standard" | "aside" | "chat" | "gallery" | "link" | "image" | "quote" | "status" | "video" | "audio")[]
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * Se o post deve ser tratado como fixo.
   */
  sticky?: boolean
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  /**
   * Os termos atribuídos ao post na taxonomia category.
   */
  categories?: number[]
  /**
   * Os termos atribuídos ao post na taxonomia post_tag.
   */
  tags?: number[]
  }
  }
  "GET /wp/v2/posts/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/posts/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/posts/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/posts/:id/autosaves": {

  }
  "GET /wp/v2/pages": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar resultados a posts atribuídos a autores específicos.
   */
  author?: number[]
  /**
   * Garantir que o resultado exclui posts atribuídos a autores específicos.
   */
  author_exclude?: number[]
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Limitar resultados para posts com um valor menu_order específico.
   */
  menu_order?: number
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title" | "menu_order")[]
  /**
   * Limitar resultados para itens cujos ascendentes têm determinados IDs.
   */
  parent?: number[]
  /**
   * Limitar resultados para todos os itens, exceto aqueles de um ID de ascendente em particular.
   */
  parent_exclude?: number[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/pages": {

  }
  "GET /wp/v2/pages/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/pages/:id": {

  }
  "PUT /wp/v2/pages/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O ID do ascendente para o post.
   */
  parent?: number
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * A ordem do post em relação a outros posts.
   */
  menu_order?: number
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/pages/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/pages/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O ID do ascendente para o post.
   */
  parent?: number
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * A ordem do post em relação a outros posts.
   */
  menu_order?: number
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/pages/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/pages/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/pages/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/pages/:id/autosaves": {

  }
  "GET /wp/v2/media": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar resultados a posts atribuídos a autores específicos.
   */
  author?: number[]
  /**
   * Garantir que o resultado exclui posts atribuídos a autores específicos.
   */
  author_exclude?: number[]
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados para itens cujos ascendentes têm determinados IDs.
   */
  parent?: number[]
  /**
   * Limitar resultados para todos os itens, exceto aqueles de um ID de ascendente em particular.
   */
  parent_exclude?: number[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  /**
   * Limitar resultados com base no relacionamento entre múltiplas taxonomias.
   */
  tax_relation?: ("AND" | "OR")[]
  /**
   * Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia media_tag.
   */
  media_tag?: string
  /**
   * Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia media_tag.
   */
  media_tag_exclude?: string
  /**
   * Limitar resultados a anexos de um tipo de mídia em particular.
   */
  media_type?: ("image" | "video" | "text" | "application" | "audio")[]
  /**
   * Limitar resultados a anexos de um tipo MIME em particular.
   */
  mime_type?: string
  }
  }
  "POST /wp/v2/media": {

  }
  "GET /wp/v2/media/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/media/:id": {

  }
  "PUT /wp/v2/media/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  /**
   * Os termos atribuídos ao post na taxonomia media_tag.
   */
  media_tag?: number[]
  /**
   * Texto alternativo para exibir quando o anexo não é exibido.
   */
  alt_text?: string
  /**
   * A legenda do anexo.
   */
  caption?: string
  /**
   * A descrição do anexo.
   */
  description?: string
  /**
   * O ID para o post associado ao anexo.
   */
  post?: number
  }
  }
  "DELETE /wp/v2/media/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/media/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * Se os comentários no post devem ou não ser abertos.
   */
  comment_status?: ("open" | "closed")[]
  /**
   * Se o post pode receber chamadas ping.
   */
  ping_status?: ("open" | "closed")[]
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  /**
   * Os termos atribuídos ao post na taxonomia media_tag.
   */
  media_tag?: number[]
  /**
   * Texto alternativo para exibir quando o anexo não é exibido.
   */
  alt_text?: string
  /**
   * A legenda do anexo.
   */
  caption?: string
  /**
   * A descrição do anexo.
   */
  description?: string
  /**
   * O ID para o post associado ao anexo.
   */
  post?: number
  }
  }
  "POST /wp/v2/media/:id/post-process": {

  }
  "POST /wp/v2/media/:id/edit": {

  }
  "GET /wp/v2/blocks": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/blocks": {

  }
  "GET /wp/v2/blocks/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/blocks/:id": {

  }
  "PUT /wp/v2/blocks/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/blocks/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/blocks/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/blocks/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/blocks/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/blocks/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/blocks/:id/autosaves": {

  }
  "GET /wp/v2/templates": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Limitar ao ID do post especificado.
   */
  wp_id?: number
  }
  }
  "POST /wp/v2/templates": {

  }
  "GET /wp/v2/templates/:id": {

  }
  "POST /wp/v2/templates/:id": {

  }
  "PUT /wp/v2/templates/:id": {
  searchParams: {
  /**
   * Slug único que identifica o modelo.
   */
  slug?: string
  /**
   * Identificador de tema para o modelo.
   */
  theme?: string
  /**
   * Conteúdo do modelo.
   */
  content?: string
  /**
   * Título do modelo.
   */
  title?: string
  /**
   * Descrição do modelo.
   */
  description?: string
  /**
   * Status do modelo.
   */
  status?: string
  }
  }
  "DELETE /wp/v2/templates/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/templates/:id": {
  searchParams: {
  /**
   * Slug único que identifica o modelo.
   */
  slug?: string
  /**
   * Identificador de tema para o modelo.
   */
  theme?: string
  /**
   * Conteúdo do modelo.
   */
  content?: string
  /**
   * Título do modelo.
   */
  title?: string
  /**
   * Descrição do modelo.
   */
  description?: string
  /**
   * Status do modelo.
   */
  status?: string
  }
  }
  "GET /wp/v2/templates/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/templates/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/templates/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/templates/:id/autosaves": {

  }
  "GET /wp/v2/hq_catalogo": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/hq_catalogo": {

  }
  "GET /wp/v2/hq_catalogo/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/hq_catalogo/:id": {

  }
  "PUT /wp/v2/hq_catalogo/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/hq_catalogo/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/hq_catalogo/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O ID da imagem destacada para o post.
   */
  featured_media?: number
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/hq_catalogo/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/hq_catalogo/:id/autosaves": {

  }
  "GET /wp/v2/hq_catalogo/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/lazyblocks": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/lazyblocks": {

  }
  "GET /wp/v2/lazyblocks/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/lazyblocks/:id": {

  }
  "PUT /wp/v2/lazyblocks/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/lazyblocks/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/lazyblocks/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/lazyblocks/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/lazyblocks/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/lazyblocks/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/lazyblocks/:id/autosaves": {

  }
  "GET /wp/v2/lazyblocks_templates": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/lazyblocks_templates": {

  }
  "GET /wp/v2/lazyblocks_templates/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/lazyblocks_templates/:id": {

  }
  "PUT /wp/v2/lazyblocks_templates/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/lazyblocks_templates/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/lazyblocks_templates/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O conteúdo para o post.
   */
  content?: string
  /**
   * Campos meta.
   */
  meta?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/lazyblocks_templates/:parent/revisions": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do objeto.
   */
  orderby?: ("date" | "id" | "include" | "relevance" | "slug" | "include_slugs" | "title")[]
  }
  }
  "GET /wp/v2/lazyblocks_templates/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/lazyblocks_templates/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/lazyblocks_templates/:id/autosaves": {

  }
  "GET /wp/v2/wp-rest-api-log": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601.
   */
  after?: string
  /**
   * Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601.
   */
  modified_after?: string
  /**
   * Limitar resultados a posts atribuídos a autores específicos.
   */
  author?: number[]
  /**
   * Garantir que o resultado exclui posts atribuídos a autores específicos.
   */
  author_exclude?: number[]
  /**
   * Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601.
   */
  before?: string
  /**
   * Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601.
   */
  modified_before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do post.
   */
  orderby?: ("author" | "date" | "id" | "include" | "modified" | "parent" | "relevance" | "slug" | "include_slugs" | "title")[]
  /**
   * Limitar resultados de posts definidos por um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados de posts atribuído por um ou mais status.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/wp-rest-api-log": {

  }
  "GET /wp/v2/wp-rest-api-log/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/wp-rest-api-log/:id": {

  }
  "PUT /wp/v2/wp-rest-api-log/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "DELETE /wp/v2/wp-rest-api-log/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/wp-rest-api-log/:id": {
  searchParams: {
  /**
   * Data da publicação do post, no fuso horário do site.
   */
  date?: string
  /**
   * Data que o post foi publicado, em GMT.
   */
  date_gmt?: string
  /**
   * Um identificador alfanumérico para o post.
   */
  slug?: string
  /**
   * Um nome de status para o post.
   */
  status?: ("publish" | "future" | "draft" | "pending" | "private" | "acf-disabled")[]
  /**
   * Uma senha para proteger o acesso ao conteúdo e resumo.
   */
  password?: string
  /**
   * O título para o post.
   */
  title?: string
  /**
   * O ID do autor para o post.
   */
  author?: number
  /**
   * O resumo para o post.
   */
  excerpt?: string
  /**
   * O arquivo do tema usado para exibir o post.
   */
  template?: string
  }
  }
  "GET /wp/v2/wp-rest-api-log/:id/autosaves": {
  searchParams: {
  /**
   * O ID do item ascendente ao salvamento automático.
   */
  parent?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/wp-rest-api-log/:id/autosaves": {

  }
  "GET /wp/v2/wp-rest-api-log/:parent": {
  searchParams: {
  /**
   * O ID do salvamento automático.
   */
  id?: number
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/types": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/types/:type": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/statuses": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/statuses/:status": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/taxonomies": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Limitar resultados para taxonomias associadas com um tipo especifico de post.
   */
  type?: string
  }
  }
  "GET /wp/v2/taxonomies/:taxonomy": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/categories": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção por termo de atributo.
   */
  orderby?: ("id" | "include" | "name" | "slug" | "include_slugs" | "term_group" | "description" | "count")[]
  /**
   * Se deseja ocultar termos não atribuídos a posts.
   */
  hide_empty?: boolean
  /**
   * Limitar resultados de termos atribuídos a um ascendente específico.
   */
  parent?: number
  /**
   * Limitar resultados de termos atribuídos a um post específico.
   */
  post?: number
  /**
   * Limitar resultados a termos com um ou mais slugs específicos.
   */
  slug?: string[]
  }
  }
  "POST /wp/v2/categories": {

  }
  "GET /wp/v2/categories/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/categories/:id": {

  }
  "PUT /wp/v2/categories/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * ID do termo ascendente.
   */
  parent?: number
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/categories/:id": {
  searchParams: {
  /**
   * Necessário ser verdadeiro, os termos não suportam lixeira.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/categories/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * ID do termo ascendente.
   */
  parent?: number
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/tags": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção por termo de atributo.
   */
  orderby?: ("id" | "include" | "name" | "slug" | "include_slugs" | "term_group" | "description" | "count")[]
  /**
   * Se deseja ocultar termos não atribuídos a posts.
   */
  hide_empty?: boolean
  /**
   * Limitar resultados de termos atribuídos a um post específico.
   */
  post?: number
  /**
   * Limitar resultados a termos com um ou mais slugs específicos.
   */
  slug?: string[]
  }
  }
  "POST /wp/v2/tags": {

  }
  "GET /wp/v2/tags/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/tags/:id": {

  }
  "PUT /wp/v2/tags/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/tags/:id": {
  searchParams: {
  /**
   * Necessário ser verdadeiro, os termos não suportam lixeira.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/tags/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/media_tag": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção por termo de atributo.
   */
  orderby?: ("id" | "include" | "name" | "slug" | "include_slugs" | "term_group" | "description" | "count")[]
  /**
   * Se deseja ocultar termos não atribuídos a posts.
   */
  hide_empty?: boolean
  /**
   * Limitar resultados de termos atribuídos a um post específico.
   */
  post?: number
  /**
   * Limitar resultados a termos com um ou mais slugs específicos.
   */
  slug?: string[]
  }
  }
  "POST /wp/v2/media_tag": {

  }
  "GET /wp/v2/media_tag/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/media_tag/:id": {

  }
  "PUT /wp/v2/media_tag/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/media_tag/:id": {
  searchParams: {
  /**
   * Necessário ser verdadeiro, os termos não suportam lixeira.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/media_tag/:id": {
  searchParams: {
  /**
   * Descrição HTML do recurso.
   */
  description?: string
  /**
   * Título em HTML para o termo.
   */
  name?: string
  /**
   * Um identificador alfanumérico para o termo único do seu tipo.
   */
  slug?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/users": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção por atributo do usuário.
   */
  orderby?: ("id" | "include" | "name" | "registered_date" | "slug" | "include_slugs" | "email" | "url")[]
  /**
   * Limitar resultados a usuários com um ou mais slugs específicos.
   */
  slug?: string[]
  /**
   * Limitar resultados a usuários que tenham pelo menos uma dada função específica. Aceita lista separada por vírgulas ou uma função apenas.
   */
  roles?: string[]
  /**
   * Limitar resultados a usuários considerados autores.
   */
  who?: ("authors")[]
  }
  }
  "POST /wp/v2/users": {

  }
  "GET /wp/v2/users/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/users/:id": {

  }
  "PUT /wp/v2/users/:id": {
  searchParams: {
  /**
   * Nome de login para o usuário.
   */
  username?: string
  /**
   * Nome de exibição para o usuário.
   */
  name?: string
  /**
   * Nome para o usuário.
   */
  first_name?: string
  /**
   * Sobrenome para o usuário.
   */
  last_name?: string
  /**
   * O endereço de e-mail para o usuário.
   */
  email?: string
  /**
   * URL do usuário.
   */
  url?: string
  /**
   * Descrição do usuário.
   */
  description?: string
  /**
   * Localidade para o usuário.
   */
  locale?: ("" | "en_US" | "pt_BR")[]
  /**
   * O apelido para o usuário.
   */
  nickname?: string
  /**
   * Um identificador alfanumérico para o usuário.
   */
  slug?: string
  /**
   * Funções atribuídas ao usuário.
   */
  roles?: string[]
  /**
   * Senha para o usuário (nunca incluso).
   */
  password?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/users/:id": {
  searchParams: {
  /**
   * Necessário para ser verdadeiro, como usuários não suporta lixeira.
   */
  force?: boolean
  /**
   * Reatribuir os posts e links do usuário excluído para este ID de usuário.
   */
  reassign: number
  }
  }
  "PATCH /wp/v2/users/:id": {
  searchParams: {
  /**
   * Nome de login para o usuário.
   */
  username?: string
  /**
   * Nome de exibição para o usuário.
   */
  name?: string
  /**
   * Nome para o usuário.
   */
  first_name?: string
  /**
   * Sobrenome para o usuário.
   */
  last_name?: string
  /**
   * O endereço de e-mail para o usuário.
   */
  email?: string
  /**
   * URL do usuário.
   */
  url?: string
  /**
   * Descrição do usuário.
   */
  description?: string
  /**
   * Localidade para o usuário.
   */
  locale?: ("" | "en_US" | "pt_BR")[]
  /**
   * O apelido para o usuário.
   */
  nickname?: string
  /**
   * Um identificador alfanumérico para o usuário.
   */
  slug?: string
  /**
   * Funções atribuídas ao usuário.
   */
  roles?: string[]
  /**
   * Senha para o usuário (nunca incluso).
   */
  password?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/users/me": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/users/me": {

  }
  "PUT /wp/v2/users/me": {
  searchParams: {
  /**
   * Nome de login para o usuário.
   */
  username?: string
  /**
   * Nome de exibição para o usuário.
   */
  name?: string
  /**
   * Nome para o usuário.
   */
  first_name?: string
  /**
   * Sobrenome para o usuário.
   */
  last_name?: string
  /**
   * O endereço de e-mail para o usuário.
   */
  email?: string
  /**
   * URL do usuário.
   */
  url?: string
  /**
   * Descrição do usuário.
   */
  description?: string
  /**
   * Localidade para o usuário.
   */
  locale?: ("" | "en_US" | "pt_BR")[]
  /**
   * O apelido para o usuário.
   */
  nickname?: string
  /**
   * Um identificador alfanumérico para o usuário.
   */
  slug?: string
  /**
   * Funções atribuídas ao usuário.
   */
  roles?: string[]
  /**
   * Senha para o usuário (nunca incluso).
   */
  password?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/users/me": {
  searchParams: {
  /**
   * Necessário para ser verdadeiro, como usuários não suporta lixeira.
   */
  force?: boolean
  /**
   * Reatribuir os posts e links do usuário excluído para este ID de usuário.
   */
  reassign: number
  }
  }
  "PATCH /wp/v2/users/me": {
  searchParams: {
  /**
   * Nome de login para o usuário.
   */
  username?: string
  /**
   * Nome de exibição para o usuário.
   */
  name?: string
  /**
   * Nome para o usuário.
   */
  first_name?: string
  /**
   * Sobrenome para o usuário.
   */
  last_name?: string
  /**
   * O endereço de e-mail para o usuário.
   */
  email?: string
  /**
   * URL do usuário.
   */
  url?: string
  /**
   * Descrição do usuário.
   */
  description?: string
  /**
   * Localidade para o usuário.
   */
  locale?: ("" | "en_US" | "pt_BR")[]
  /**
   * O apelido para o usuário.
   */
  nickname?: string
  /**
   * Um identificador alfanumérico para o usuário.
   */
  slug?: string
  /**
   * Funções atribuídas ao usuário.
   */
  roles?: string[]
  /**
   * Senha para o usuário (nunca incluso).
   */
  password?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/users/:userId/application-passwords": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/users/:userId/application-passwords": {

  }
  "DELETE /wp/v2/users/:userId/application-passwords": {

  }
  "GET /wp/v2/users/:userId/application-passwords/introspect": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/users/:userId": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/users/:userId": {

  }
  "PUT /wp/v2/users/:userId": {
  searchParams: {
  /**
   * Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
   */
  app_id?: string
  /**
   * O nome da senha da aplicação.
   */
  name?: string
  }
  }
  "DELETE /wp/v2/users/:userId": {

  }
  "PATCH /wp/v2/users/:userId": {
  searchParams: {
  /**
   * Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
   */
  app_id?: string
  /**
   * O nome da senha da aplicação.
   */
  name?: string
  }
  }
  "GET /wp/v2/comments": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar resposta para comentários publicados depois de uma determinada data compatível com a norma ISO8601.
   */
  after?: string
  /**
   * Limitar resultados a comentários atribuídos a IDs de usuários específicos. Requer autorização.
   */
  author?: number[]
  /**
   * Garantir que resultados excluirão comentários atribuídos a IDs de usuários específicos. Requer autorização.
   */
  author_exclude?: number[]
  /**
   * Limitar resultado para e-mails de autores em especifico. Requer autorização.
   */
  author_email?: string
  /**
   * Limitar resposta para comentários publicados antes de uma determinada data compatível com a norma ISO8601.
   */
  before?: string
  /**
   * Garantir que o resultado exclua IDs específicos.
   */
  exclude?: number[]
  /**
   * Limitar resultados para IDs específicos.
   */
  include?: number[]
  /**
   * Deslocar o resultado para um número especifico de itens.
   */
  offset?: number
  /**
   * Ordenar atributos de forma ascendente ou descendente.
   */
  order?: ("asc" | "desc")[]
  /**
   * Ordenar coleção pelo atributo do comentário.
   */
  orderby?: ("date" | "date_gmt" | "id" | "include" | "post" | "parent" | "type")[]
  /**
   * Limitar resultados para comentários cujos ascendentes têm determinados IDs.
   */
  parent?: number[]
  /**
   * Garantir que o resultado exclui IDs de ascendentes específicos.
   */
  parent_exclude?: number[]
  /**
   * Limitar resultados para comentários atribuídos para IDs específicos de post.
   */
  post?: number[]
  /**
   * Limitar resultados para comentários atribuídos a um status específico. Necessita autorização.
   */
  status?: string
  /**
   * Limitar resultados para comentários atribuídos a um tipo específico. Necessita autorização.
   */
  type?: string
  /**
   * A senha para o post se este for protegido por senha.
   */
  password?: string
  }
  }
  "POST /wp/v2/comments": {

  }
  "GET /wp/v2/comments/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A senha do post ascendente ao comentário (se o post for protegido por senha).
   */
  password?: string
  }
  }
  "POST /wp/v2/comments/:id": {

  }
  "PUT /wp/v2/comments/:id": {
  searchParams: {
  /**
   * O ID do usuário do objeto, se o autor for um usuário.
   */
  author?: number
  /**
   * Endereço e-mail para o autor do comentário.
   */
  author_email?: string
  /**
   * Endereço IP para o autor do comentário.
   */
  author_ip?: string
  /**
   * Nome de exibição para o autor do comentário.
   */
  author_name?: string
  /**
   * URL para o autor do comentário.
   */
  author_url?: string
  /**
   * Agente de usuário para o autor do comentário.
   */
  author_user_agent?: string
  /**
   * O conteúdo para o comentário.
   */
  content?: string
  /**
   * Data da publicação do comentário, no fuso horário do site.
   */
  date?: string
  /**
   * Data da publicação do comentário, em GMT.
   */
  date_gmt?: string
  /**
   * O ID do item ascendente ao comentário.
   */
  parent?: number
  /**
   * O ID para o post associado ao objeto.
   */
  post?: number
  /**
   * Estado do comentário.
   */
  status?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "DELETE /wp/v2/comments/:id": {
  searchParams: {
  /**
   * Ignorar ou não o envio para a lixeira e forçar a exclusão.
   */
  force?: boolean
  /**
   * A senha do post ascendente ao comentário (se o post for protegido por senha).
   */
  password?: string
  }
  }
  "PATCH /wp/v2/comments/:id": {
  searchParams: {
  /**
   * O ID do usuário do objeto, se o autor for um usuário.
   */
  author?: number
  /**
   * Endereço e-mail para o autor do comentário.
   */
  author_email?: string
  /**
   * Endereço IP para o autor do comentário.
   */
  author_ip?: string
  /**
   * Nome de exibição para o autor do comentário.
   */
  author_name?: string
  /**
   * URL para o autor do comentário.
   */
  author_url?: string
  /**
   * Agente de usuário para o autor do comentário.
   */
  author_user_agent?: string
  /**
   * O conteúdo para o comentário.
   */
  content?: string
  /**
   * Data da publicação do comentário, no fuso horário do site.
   */
  date?: string
  /**
   * Data da publicação do comentário, em GMT.
   */
  date_gmt?: string
  /**
   * O ID do item ascendente ao comentário.
   */
  parent?: number
  /**
   * O ID para o post associado ao objeto.
   */
  post?: number
  /**
   * Estado do comentário.
   */
  status?: string
  /**
   * Campos meta.
   */
  meta?: string
  }
  }
  "GET /wp/v2/search": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limite os resultados aos itens de um tipo de objeto.
   */
  type?: ("post" | "term" | "post-format")[]
  /**
   * Limite os resultados a itens de um ou mais subtipos de objeto.
   */
  subtype?: string[]
  }
  }
  "GET /wp/v2/block-renderer/:name": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("edit")[]
  /**
   * Atributos para o bloco.
   */
  attributes?: string
  /**
   * ID de contexto do post.
   */
  post_id?: number
  }
  }
  "POST /wp/v2/block-renderer/:name": {

  }
  "GET /wp/v2/block-types": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Namespace do bloco.
   */
  namespace?: string
  }
  }
  "GET /wp/v2/block-types/:namespace": {
  searchParams: {
  /**
   * Nome do bloco.
   */
  name?: string
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/settings": {

  }
  "POST /wp/v2/settings": {

  }
  "PUT /wp/v2/settings": {
  searchParams: {
  /**
   * Título do site.
   */
  title?: string
  /**
   * Slogan do site.
   */
  description?: string
  /**
   * URL do site.
   */
  url?: string
  /**
   * Este endereço é utilizado para administração, como notificação de novo usuário.
   */
  email?: string
  /**
   * Uma cidade no mesmo fuso horário que você.
   */
  timezone?: string
  /**
   * Um formato de data para todos os textos.
   */
  date_format?: string
  /**
   * Um formato de hora para todos os textos.
   */
  time_format?: string
  /**
   * Número do dia da semana em que a semana deve iniciar.
   */
  start_of_week?: number
  /**
   * Código de localização do WordPress.
   */
  language?: string
  /**
   * Converter emoticons como :-) e :-P em gráficos ao exibí-los.
   */
  use_smilies?: boolean
  /**
   * Categoria padrão para post.
   */
  default_category?: number
  /**
   * Formato de post padrão.
   */
  default_post_format?: string
  /**
   * As páginas do blog mostram no máximo.
   */
  posts_per_page?: number
  /**
   * Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos.
   */
  default_ping_status?: ("open" | "closed")[]
  /**
   * Permitir que pessoas enviem comentários em novos posts.
   */
  default_comment_status?: ("open" | "closed")[]
  /**
   * Logo do site.
   */
  site_logo?: number
  }
  }
  "PATCH /wp/v2/settings": {
  searchParams: {
  /**
   * Título do site.
   */
  title?: string
  /**
   * Slogan do site.
   */
  description?: string
  /**
   * URL do site.
   */
  url?: string
  /**
   * Este endereço é utilizado para administração, como notificação de novo usuário.
   */
  email?: string
  /**
   * Uma cidade no mesmo fuso horário que você.
   */
  timezone?: string
  /**
   * Um formato de data para todos os textos.
   */
  date_format?: string
  /**
   * Um formato de hora para todos os textos.
   */
  time_format?: string
  /**
   * Número do dia da semana em que a semana deve iniciar.
   */
  start_of_week?: number
  /**
   * Código de localização do WordPress.
   */
  language?: string
  /**
   * Converter emoticons como :-) e :-P em gráficos ao exibí-los.
   */
  use_smilies?: boolean
  /**
   * Categoria padrão para post.
   */
  default_category?: number
  /**
   * Formato de post padrão.
   */
  default_post_format?: string
  /**
   * As páginas do blog mostram no máximo.
   */
  posts_per_page?: number
  /**
   * Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos.
   */
  default_ping_status?: ("open" | "closed")[]
  /**
   * Permitir que pessoas enviem comentários em novos posts.
   */
  default_comment_status?: ("open" | "closed")[]
  /**
   * Logo do site.
   */
  site_logo?: number
  }
  }
  "GET /wp/v2/themes": {
  searchParams: {
  /**
   * Limitar resultados a temas com um ou mais status atribuídos.
   */
  status?: string[]
  }
  }
  "GET /wp/v2/themes/:stylesheet": {

  }
  "GET /wp/v2/plugins": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limita os resultados a plugins com o status especificado.
   */
  status?: string[]
  }
  }
  "POST /wp/v2/plugins": {

  }
  "GET /wp/v2/plugins/:plugin": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/plugins/:plugin": {

  }
  "PUT /wp/v2/plugins/:plugin": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * O status de ativação do plugin
   */
  status?: ("inactive" | "active")[]
  }
  }
  "DELETE /wp/v2/plugins/:plugin": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "PATCH /wp/v2/plugins/:plugin": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * O status de ativação do plugin
   */
  status?: ("inactive" | "active")[]
  }
  }
  "GET /wp/v2/sidebars": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/sidebars/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/sidebars/:id": {

  }
  "PUT /wp/v2/sidebars/:id": {
  searchParams: {
  /**
   * Widgets aninhados.
   */
  widgets?: any[]
  }
  }
  "PATCH /wp/v2/sidebars/:id": {
  searchParams: {
  /**
   * Widgets aninhados.
   */
  widgets?: any[]
  }
  }
  "GET /wp/v2/widget-types": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "GET /wp/v2/widget-types/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/widget-types/:id/encode": {

  }
  "GET /wp/v2/widgets": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  /**
   * A barra lateral de onde se deseja retornar os widgets.
   */
  sidebar?: string
  }
  }
  "POST /wp/v2/widgets": {

  }
  "GET /wp/v2/widgets/:id": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed" | "edit")[]
  }
  }
  "POST /wp/v2/widgets/:id": {

  }
  "PUT /wp/v2/widgets/:id": {
  searchParams: {
  /**
   * O tipo do widget. Corresponde ao ID no endpoint widget-types.
   */
  id_base?: string
  /**
   * A barra lateral a que o widget pertence.
   */
  sidebar?: string
  /**
   * Configurações da instância do widget, se suportado.
   */
  instance?: string
  /**
   * Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita.
   */
  form_data?: string
  }
  }
  "DELETE /wp/v2/widgets/:id": {
  searchParams: {
  /**
   * Se deve-se forçar a remoção do widget ou movê-lo para a barra lateral inativa.
   */
  force?: boolean
  }
  }
  "PATCH /wp/v2/widgets/:id": {
  searchParams: {
  /**
   * O tipo do widget. Corresponde ao ID no endpoint widget-types.
   */
  id_base?: string
  /**
   * A barra lateral a que o widget pertence.
   */
  sidebar?: string
  /**
   * Configurações da instância do widget, se suportado.
   */
  instance?: string
  /**
   * Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita.
   */
  form_data?: string
  }
  }
  "GET /wp/v2/block-directory/search": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view")[]
  /**
   * Página atual da coleção.
   */
  page?: number
  /**
   * Número máximo de itens retornados no resultado.
   */
  per_page?: number
  /**
   * Limitar resultados a blocos correspondentes ao termo da pesquisa.
   */
  term: string
  }
  }
  "GET /wp/v2/pattern-directory/patterns": {
  searchParams: {
  /**
   * Escopo sob qual a requisição é feita, determina os campos presentes na resposta.
   */
  context?: ("view" | "embed")[]
  /**
   * Limitar resultados para aqueles que combinam com um texto.
   */
  search?: string
  /**
   * Limitar resultados para aqueles que combinam com o ID de uma categoria.
   */
  category?: number
  /**
   * Limitar resultados para aqueles que combinam com um ID de palavra-chave.
   */
  keyword?: number
  }
  }
  "GET /yoast/v1/file_size": {
  searchParams: {
  /**
   * The url to retrieve
   */
  url: string
  }
  }
  "GET /yoast/v1/statistics": {

  }
  "POST /yoast/v1/alerts/dismiss": {

  }
  "POST /yoast/v1/workouts/site_representation": {

  }
  "POST /yoast/v1/workouts/social_profiles": {

  }
  "POST /yoast/v1/workouts/enable_tracking": {

  }
  "GET /yoast/v1/get_head": {
  searchParams: {
  url: string
  }
  }
  "POST /yoast/v1/indexing/posts": {

  }
  "POST /yoast/v1/indexing/terms": {

  }
  "POST /yoast/v1/indexing/post-type-archives": {

  }
  "POST /yoast/v1/indexing/general": {

  }
  "POST /yoast/v1/indexing/prepare": {

  }
  "POST /yoast/v1/indexing/indexables-complete": {

  }
  "POST /yoast/v1/indexing/complete": {

  }
  "POST /yoast/v1/link-indexing/posts": {

  }
  "POST /yoast/v1/link-indexing/terms": {

  }
  "POST /yoast/v1/semrush/authenticate": {

  }
  "POST /yoast/v1/semrush/country_code": {

  }
  "GET /yoast/v1/semrush/related_keyphrases": {
  searchParams: {
  keyphrase: string
  country_code: string
  }
  }
  "GET /yoast/v1/wincher/authorization-url": {

  }
  "POST /yoast/v1/wincher/authenticate": {

  }
  "POST /yoast/v1/wincher/keyphrases/track": {

  }
  "POST /yoast/v1/wincher/keyphrases": {

  }
  "DELETE /yoast/v1/wincher/keyphrases/untrack": {

  }
  "GET /yoast/v1/workouts": {

  }
  "POST /yoast/v1/workouts": {

  }
  "POST /jwt-auth/v1/token": {

  }
  "POST /jwt-auth/v1/token/validate": {

  }
  "GET /contact-form-7/v1/contact-forms": {

  }
  "POST /contact-form-7/v1/contact-forms": {

  }
  "GET /contact-form-7/v1/contact-forms/:id": {

  }
  "POST /contact-form-7/v1/contact-forms/:id": {

  }
  "PUT /contact-form-7/v1/contact-forms/:id": {

  }
  "DELETE /contact-form-7/v1/contact-forms/:id": {

  }
  "PATCH /contact-form-7/v1/contact-forms/:id": {

  }
  "POST /contact-form-7/v1/contact-forms/:id/feedback": {

  }
  "GET /contact-form-7/v1/contact-forms/:id/refill": {

  }
  }
