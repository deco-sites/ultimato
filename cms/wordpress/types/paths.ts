// deno-lint-ignore-file ban-types
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/wp/v2/posts": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar resultados a posts atribuídos a autores específicos. */
          author?: number[];
          /** @description Garantir que o resultado exclui posts atribuídos a autores específicos. */
          author_exclude?: number[];
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
          /** @description Limitar resultados com base no relacionamento entre múltiplas taxonomias. */
          tax_relation?: ("AND" | "OR")[];
          /** @description Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia categories. */
          categories?: string;
          /** @description Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia categories. */
          categories_exclude?: string;
          /** @description Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia tags. */
          tags?: string;
          /** @description Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia tags. */
          tags_exclude?: string;
          /** @description Limitar resultados de itens que sejam fixos. */
          sticky?: boolean;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/posts/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description O formato para o post. */
          format?: (
            | "standard"
            | "aside"
            | "chat"
            | "gallery"
            | "link"
            | "image"
            | "quote"
            | "status"
            | "video"
            | "audio"
          )[];
          /** @description Campos meta. */
          meta?: string;
          /** @description Se o post deve ser tratado como fixo. */
          sticky?: boolean;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
          /** @description Os termos atribuídos ao post na taxonomia category. */
          categories?: number[];
          /** @description Os termos atribuídos ao post na taxonomia post_tag. */
          tags?: number[];
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description O formato para o post. */
          format?: (
            | "standard"
            | "aside"
            | "chat"
            | "gallery"
            | "link"
            | "image"
            | "quote"
            | "status"
            | "video"
            | "audio"
          )[];
          /** @description Campos meta. */
          meta?: string;
          /** @description Se o post deve ser tratado como fixo. */
          sticky?: boolean;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
          /** @description Os termos atribuídos ao post na taxonomia category. */
          categories?: number[];
          /** @description Os termos atribuídos ao post na taxonomia post_tag. */
          tags?: number[];
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/posts/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/posts/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/posts/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description O formato para o post. */
            format?: (
              | "standard"
              | "aside"
              | "chat"
              | "gallery"
              | "link"
              | "image"
              | "quote"
              | "status"
              | "video"
              | "audio"
            )[];
            /** @description Campos meta. */
            meta?: string;
            /** @description Se o post deve ser tratado como fixo. */
            sticky?: boolean;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia category. */
            categories?: number[];
            /** @description Os termos atribuídos ao post na taxonomia post_tag. */
            tags?: number[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pages": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar resultados a posts atribuídos a autores específicos. */
          author?: number[];
          /** @description Garantir que o resultado exclui posts atribuídos a autores específicos. */
          author_exclude?: number[];
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Limitar resultados para posts com um valor menu_order específico. */
          menu_order?: number;
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
            | "menu_order"
          )[];
          /** @description Limitar resultados para itens cujos ascendentes têm determinados IDs. */
          parent?: number[];
          /** @description Limitar resultados para todos os itens, exceto aqueles de um ID de ascendente em particular. */
          parent_exclude?: number[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pages/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O ID do ascendente para o post. */
          parent?: number;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description A ordem do post em relação a outros posts. */
          menu_order?: number;
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O ID do ascendente para o post. */
          parent?: number;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description A ordem do post em relação a outros posts. */
          menu_order?: number;
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pages/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pages/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pages/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do ascendente para o post.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description A ordem do post em relação a outros posts.
             */
            menu_order?: number;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar resultados a posts atribuídos a autores específicos. */
          author?: number[];
          /** @description Garantir que o resultado exclui posts atribuídos a autores específicos. */
          author_exclude?: number[];
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados para itens cujos ascendentes têm determinados IDs. */
          parent?: number[];
          /** @description Limitar resultados para todos os itens, exceto aqueles de um ID de ascendente em particular. */
          parent_exclude?: number[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
          /** @description Limitar resultados com base no relacionamento entre múltiplas taxonomias. */
          tax_relation?: ("AND" | "OR")[];
          /** @description Limitar resultados para todos os itens com termos específicos atribuídos a taxonomia media_tag. */
          media_tag?: string;
          /** @description Limitar resultados para todos os itens que tenham o termo específico atribuído para a taxonomia media_tag. */
          media_tag_exclude?: string;
          /** @description Limitar resultados a anexos de um tipo de mídia em particular. */
          media_type?: ("image" | "video" | "text" | "application" | "audio")[];
          /** @description Limitar resultados a anexos de um tipo MIME em particular. */
          mime_type?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia media_tag. */
            media_tag?: number[];
            /** @description Texto alternativo para exibir quando o anexo não é exibido. */
            alt_text?: string;
            /** @description A legenda do anexo. */
            caption?: string;
            /** @description A descrição do anexo. */
            description?: string;
            /**
             * Format: int64
             * @description O ID para o post associado ao anexo.
             */
            post?: number;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia media_tag. */
            media_tag?: number[];
            /** @description Texto alternativo para exibir quando o anexo não é exibido. */
            alt_text?: string;
            /** @description A legenda do anexo. */
            caption?: string;
            /** @description A descrição do anexo. */
            description?: string;
            /**
             * Format: int64
             * @description O ID para o post associado ao anexo.
             */
            post?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description O título para o post. */
          title?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
          /** @description Os termos atribuídos ao post na taxonomia media_tag. */
          media_tag?: number[];
          /** @description Texto alternativo para exibir quando o anexo não é exibido. */
          alt_text?: string;
          /** @description A legenda do anexo. */
          caption?: string;
          /** @description A descrição do anexo. */
          description?: string;
          /** @description O ID para o post associado ao anexo. */
          post?: number;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia media_tag. */
            media_tag?: number[];
            /** @description Texto alternativo para exibir quando o anexo não é exibido. */
            alt_text?: string;
            /** @description A legenda do anexo. */
            caption?: string;
            /** @description A descrição do anexo. */
            description?: string;
            /**
             * Format: int64
             * @description O ID para o post associado ao anexo.
             */
            post?: number;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description Se os comentários no post devem ou não ser abertos. */
            comment_status?: ("open" | "closed")[];
            /** @description Se o post pode receber chamadas ping. */
            ping_status?: ("open" | "closed")[];
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
            /** @description Os termos atribuídos ao post na taxonomia media_tag. */
            media_tag?: number[];
            /** @description Texto alternativo para exibir quando o anexo não é exibido. */
            alt_text?: string;
            /** @description A legenda do anexo. */
            caption?: string;
            /** @description A descrição do anexo. */
            description?: string;
            /**
             * Format: int64
             * @description O ID para o post associado ao anexo.
             */
            post?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description O título para o post. */
          title?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description Se os comentários no post devem ou não ser abertos. */
          comment_status?: ("open" | "closed")[];
          /** @description Se o post pode receber chamadas ping. */
          ping_status?: ("open" | "closed")[];
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
          /** @description Os termos atribuídos ao post na taxonomia media_tag. */
          media_tag?: number[];
          /** @description Texto alternativo para exibir quando o anexo não é exibido. */
          alt_text?: string;
          /** @description A legenda do anexo. */
          caption?: string;
          /** @description A descrição do anexo. */
          description?: string;
          /** @description O ID para o post associado ao anexo. */
          post?: number;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media/{id}/post-process": {
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o anexo. */
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            action: "create-image-subsizes"[];
          };
          "multipart/form-data": {
            action: "create-image-subsizes"[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media/{id}/edit": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: uri
             * @description URL para o arquivo de imagem editado.
             */
            src: string;
            /** @description Array de edições da imagem. */
            modifiers?: Record<string, never>[];
            /**
             * Format: int64
             * @description A quantidade para girar a imagem no sentido horário em graus. Obsoleto: use `modifiers` no lugar.
             */
            rotation?: number;
            /** @description Como uma porcentagem da imagem, a posição x para iniciar o recorte. Obsoleto: use `modifiers` no lugar. */
            x?: number;
            /** @description Como uma porcentagem da imagem, a posição y para iniciar o recorte. Obsoleto: use `modifiers` no lugar. */
            y?: number;
            /** @description Como uma porcentagem da imagem, a largura que a imagem será recortada. Obsoleto: use `modifiers` no lugar. */
            width?: number;
            /** @description Como uma porcentagem da imagem, a altura que a imagem será recortada. Obsoleto: use `modifiers` no lugar. */
            height?: number;
          };
          "multipart/form-data": {
            /**
             * Format: uri
             * @description URL para o arquivo de imagem editado.
             */
            src: string;
            /** @description Array de edições da imagem. */
            modifiers?: Record<string, never>[];
            /**
             * Format: int64
             * @description A quantidade para girar a imagem no sentido horário em graus. Obsoleto: use `modifiers` no lugar.
             */
            rotation?: number;
            /** @description Como uma porcentagem da imagem, a posição x para iniciar o recorte. Obsoleto: use `modifiers` no lugar. */
            x?: number;
            /** @description Como uma porcentagem da imagem, a posição y para iniciar o recorte. Obsoleto: use `modifiers` no lugar. */
            y?: number;
            /** @description Como uma porcentagem da imagem, a largura que a imagem será recortada. Obsoleto: use `modifiers` no lugar. */
            width?: number;
            /** @description Como uma porcentagem da imagem, a altura que a imagem será recortada. Obsoleto: use `modifiers` no lugar. */
            height?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/blocks": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/blocks/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/blocks/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/blocks/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/blocks/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/templates": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Limitar ao ID do post especificado. */
          wp_id?: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Slug único que identifica o modelo. */
            slug: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
          "multipart/form-data": {
            /** @description Slug único que identifica o modelo. */
            slug: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/templates/{id}": {
    get: {
      parameters: {
        path: {
          /** @description O id de um modelo */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Slug único que identifica o modelo. */
          slug?: string;
          /** @description Identificador de tema para o modelo. */
          theme?: string;
          /** @description Conteúdo do modelo. */
          content?: string;
          /** @description Título do modelo. */
          title?: string;
          /** @description Descrição do modelo. */
          description?: string;
          /** @description Status do modelo. */
          status?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Slug único que identifica o modelo. */
            slug?: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
          "multipart/form-data": {
            /** @description Slug único que identifica o modelo. */
            slug?: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Slug único que identifica o modelo. */
          slug?: string;
          /** @description Identificador de tema para o modelo. */
          theme?: string;
          /** @description Conteúdo do modelo. */
          content?: string;
          /** @description Título do modelo. */
          title?: string;
          /** @description Descrição do modelo. */
          description?: string;
          /** @description Status do modelo. */
          status?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/templates/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/templates/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/templates/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /** @description Slug único que identifica o modelo. */
            slug?: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /** @description Slug único que identifica o modelo. */
            slug?: string;
            /** @description Identificador de tema para o modelo. */
            theme?: string;
            /** @description Conteúdo do modelo. */
            content?: string;
            /** @description Título do modelo. */
            title?: string;
            /** @description Descrição do modelo. */
            description?: string;
            /** @description Status do modelo. */
            status?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/hq_catalogo": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/hq_catalogo/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O ID da imagem destacada para o post. */
          featured_media?: number;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/hq_catalogo/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /**
             * Format: int64
             * @description O ID da imagem destacada para o post.
             */
            featured_media?: number;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/hq_catalogo/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks_templates": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks_templates/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O conteúdo para o post. */
          content?: string;
          /** @description Campos meta. */
          meta?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks_templates/{parent}/revisions": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do objeto. */
          orderby?: (
            | "date"
            | "id"
            | "include"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
        };
        path: {
          /** @description O ID do item ascendente à revisão. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks_templates/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/lazyblocks_templates/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /** @description O conteúdo para o post. */
            content?: string;
            /** @description Campos meta. */
            meta?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/wp-rest-api-log": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar respostas a posts publicados depois de uma determinada data compatível com o formato ISO8601. */
          after?: string;
          /** @description Limitar respostas a posts modificados depois de uma determinada data compatível com o formato ISO8601. */
          modified_after?: string;
          /** @description Limitar resultados a posts atribuídos a autores específicos. */
          author?: number[];
          /** @description Garantir que o resultado exclui posts atribuídos a autores específicos. */
          author_exclude?: number[];
          /** @description Limitar respostas a posts publicados antes de uma determinada data compatível com o formato ISO8601. */
          before?: string;
          /** @description Limitar respostas a posts modificados antes de uma determinada data compatível com o formato ISO8601. */
          modified_before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do post. */
          orderby?: (
            | "author"
            | "date"
            | "id"
            | "include"
            | "modified"
            | "parent"
            | "relevance"
            | "slug"
            | "include_slugs"
            | "title"
          )[];
          /** @description Limitar resultados de posts definidos por um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados de posts atribuído por um ou mais status. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/wp-rest-api-log/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Data da publicação do post, no fuso horário do site. */
          date?: string;
          /** @description Data que o post foi publicado, em GMT. */
          date_gmt?: string;
          /** @description Um identificador alfanumérico para o post. */
          slug?: string;
          /** @description Um nome de status para o post. */
          status?: (
            | "publish"
            | "future"
            | "draft"
            | "pending"
            | "private"
            | "acf-disabled"
          )[];
          /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
          password?: string;
          /** @description O título para o post. */
          title?: string;
          /** @description O ID do autor para o post. */
          author?: number;
          /** @description O resumo para o post. */
          excerpt?: string;
          /** @description O arquivo do tema usado para exibir o post. */
          template?: string;
        };
        path: {
          /** @description Identificador único para o post. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/wp-rest-api-log/{id}/autosaves": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do item ascendente ao salvamento automático.
             */
            parent?: number;
            /**
             * Format: date-time
             * @description Data da publicação do post, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data que o post foi publicado, em GMT.
             */
            date_gmt?: string;
            /** @description Um identificador alfanumérico para o post. */
            slug?: string;
            /** @description Um nome de status para o post. */
            status?: (
              | "publish"
              | "future"
              | "draft"
              | "pending"
              | "private"
              | "acf-disabled"
            )[];
            /** @description Uma senha para proteger o acesso ao conteúdo e resumo. */
            password?: string;
            /** @description O título para o post. */
            title?: string;
            /**
             * Format: int64
             * @description O ID do autor para o post.
             */
            author?: number;
            /** @description O resumo para o post. */
            excerpt?: string;
            /** @description O arquivo do tema usado para exibir o post. */
            template?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/wp-rest-api-log/{parent}": {
    get: {
      parameters: {
        query?: {
          /** @description O ID do salvamento automático. */
          id?: number;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID do item ascendente ao salvamento automático. */
          parent: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/types": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/types/{type}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Um identificador alfanumérico para o tipo de post. */
          type: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/statuses": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/statuses/{status}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Um identificador alfanumérico para o status. */
          status: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/taxonomies": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Limitar resultados para taxonomias associadas com um tipo especifico de post. */
          type?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/taxonomies/{taxonomy}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Um identificador alfanumérico para a taxonomia. */
          taxonomy: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/categories": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção por termo de atributo. */
          orderby?: (
            | "id"
            | "include"
            | "name"
            | "slug"
            | "include_slugs"
            | "term_group"
            | "description"
            | "count"
          )[];
          /** @description Se deseja ocultar termos não atribuídos a posts. */
          hide_empty?: boolean;
          /** @description Limitar resultados de termos atribuídos a um ascendente específico. */
          parent?: number;
          /** @description Limitar resultados de termos atribuídos a um post específico. */
          post?: number;
          /** @description Limitar resultados a termos com um ou mais slugs específicos. */
          slug?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /**
             * Format: int64
             * @description ID do termo ascendente.
             */
            parent?: number;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /**
             * Format: int64
             * @description ID do termo ascendente.
             */
            parent?: number;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/categories/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description ID do termo ascendente. */
          parent?: number;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /**
             * Format: int64
             * @description ID do termo ascendente.
             */
            parent?: number;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /**
             * Format: int64
             * @description ID do termo ascendente.
             */
            parent?: number;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Necessário ser verdadeiro, os termos não suportam lixeira. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description ID do termo ascendente. */
          parent?: number;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/tags": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção por termo de atributo. */
          orderby?: (
            | "id"
            | "include"
            | "name"
            | "slug"
            | "include_slugs"
            | "term_group"
            | "description"
            | "count"
          )[];
          /** @description Se deseja ocultar termos não atribuídos a posts. */
          hide_empty?: boolean;
          /** @description Limitar resultados de termos atribuídos a um post específico. */
          post?: number;
          /** @description Limitar resultados a termos com um ou mais slugs específicos. */
          slug?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/tags/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Necessário ser verdadeiro, os termos não suportam lixeira. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media_tag": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção por termo de atributo. */
          orderby?: (
            | "id"
            | "include"
            | "name"
            | "slug"
            | "include_slugs"
            | "term_group"
            | "description"
            | "count"
          )[];
          /** @description Se deseja ocultar termos não atribuídos a posts. */
          hide_empty?: boolean;
          /** @description Limitar resultados de termos atribuídos a um post específico. */
          post?: number;
          /** @description Limitar resultados a termos com um ou mais slugs específicos. */
          slug?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/media_tag/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Descrição HTML do recurso. */
            description?: string;
            /** @description Título em HTML para o termo. */
            name?: string;
            /** @description Um identificador alfanumérico para o termo único do seu tipo. */
            slug?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Necessário ser verdadeiro, os termos não suportam lixeira. */
          force?: boolean;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Descrição HTML do recurso. */
          description?: string;
          /** @description Título em HTML para o termo. */
          name?: string;
          /** @description Um identificador alfanumérico para o termo único do seu tipo. */
          slug?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o termo. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção por atributo do usuário. */
          orderby?: (
            | "id"
            | "include"
            | "name"
            | "registered_date"
            | "slug"
            | "include_slugs"
            | "email"
            | "url"
          )[];
          /** @description Limitar resultados a usuários com um ou mais slugs específicos. */
          slug?: string[];
          /** @description Limitar resultados a usuários que tenham pelo menos uma dada função específica. Aceita lista separada por vírgulas ou uma função apenas. */
          roles?: string[];
          /** @description Limitar resultados a usuários considerados autores. */
          who?: "authors"[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Nome de login para o usuário. */
            username: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Nome de login para o usuário. */
            username: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Identificador único para o usuário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Nome de login para o usuário. */
          username?: string;
          /** @description Nome de exibição para o usuário. */
          name?: string;
          /** @description Nome para o usuário. */
          first_name?: string;
          /** @description Sobrenome para o usuário. */
          last_name?: string;
          /** @description O endereço de e-mail para o usuário. */
          email?: string;
          /** @description URL do usuário. */
          url?: string;
          /** @description Descrição do usuário. */
          description?: string;
          /** @description Localidade para o usuário. */
          locale?: ("" | "en_US" | "pt_BR")[];
          /** @description O apelido para o usuário. */
          nickname?: string;
          /** @description Um identificador alfanumérico para o usuário. */
          slug?: string;
          /** @description Funções atribuídas ao usuário. */
          roles?: string[];
          /** @description Senha para o usuário (nunca incluso). */
          password?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o usuário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o usuário. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Nome de login para o usuário. */
            username?: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email?: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Nome de login para o usuário. */
            username?: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email?: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query: {
          /** @description Necessário para ser verdadeiro, como usuários não suporta lixeira. */
          force?: boolean;
          /** @description Reatribuir os posts e links do usuário excluído para este ID de usuário. */
          reassign: number;
        };
        path: {
          /** @description Identificador único para o usuário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Nome de login para o usuário. */
          username?: string;
          /** @description Nome de exibição para o usuário. */
          name?: string;
          /** @description Nome para o usuário. */
          first_name?: string;
          /** @description Sobrenome para o usuário. */
          last_name?: string;
          /** @description O endereço de e-mail para o usuário. */
          email?: string;
          /** @description URL do usuário. */
          url?: string;
          /** @description Descrição do usuário. */
          description?: string;
          /** @description Localidade para o usuário. */
          locale?: ("" | "en_US" | "pt_BR")[];
          /** @description O apelido para o usuário. */
          nickname?: string;
          /** @description Um identificador alfanumérico para o usuário. */
          slug?: string;
          /** @description Funções atribuídas ao usuário. */
          roles?: string[];
          /** @description Senha para o usuário (nunca incluso). */
          password?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o usuário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users/me": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Nome de login para o usuário. */
          username?: string;
          /** @description Nome de exibição para o usuário. */
          name?: string;
          /** @description Nome para o usuário. */
          first_name?: string;
          /** @description Sobrenome para o usuário. */
          last_name?: string;
          /** @description O endereço de e-mail para o usuário. */
          email?: string;
          /** @description URL do usuário. */
          url?: string;
          /** @description Descrição do usuário. */
          description?: string;
          /** @description Localidade para o usuário. */
          locale?: ("" | "en_US" | "pt_BR")[];
          /** @description O apelido para o usuário. */
          nickname?: string;
          /** @description Um identificador alfanumérico para o usuário. */
          slug?: string;
          /** @description Funções atribuídas ao usuário. */
          roles?: string[];
          /** @description Senha para o usuário (nunca incluso). */
          password?: string;
          /** @description Campos meta. */
          meta?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Nome de login para o usuário. */
            username?: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email?: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /** @description Nome de login para o usuário. */
            username?: string;
            /** @description Nome de exibição para o usuário. */
            name?: string;
            /** @description Nome para o usuário. */
            first_name?: string;
            /** @description Sobrenome para o usuário. */
            last_name?: string;
            /**
             * Format: email
             * @description O endereço de e-mail para o usuário.
             */
            email?: string;
            /**
             * Format: uri
             * @description URL do usuário.
             */
            url?: string;
            /** @description Descrição do usuário. */
            description?: string;
            /** @description Localidade para o usuário. */
            locale?: ("" | "en_US" | "pt_BR")[];
            /** @description O apelido para o usuário. */
            nickname?: string;
            /** @description Um identificador alfanumérico para o usuário. */
            slug?: string;
            /** @description Funções atribuídas ao usuário. */
            roles?: string[];
            /** @description Senha para o usuário (nunca incluso). */
            password?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query: {
          /** @description Necessário para ser verdadeiro, como usuários não suporta lixeira. */
          force?: boolean;
          /** @description Reatribuir os posts e links do usuário excluído para este ID de usuário. */
          reassign: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Nome de login para o usuário. */
          username?: string;
          /** @description Nome de exibição para o usuário. */
          name?: string;
          /** @description Nome para o usuário. */
          first_name?: string;
          /** @description Sobrenome para o usuário. */
          last_name?: string;
          /** @description O endereço de e-mail para o usuário. */
          email?: string;
          /** @description URL do usuário. */
          url?: string;
          /** @description Descrição do usuário. */
          description?: string;
          /** @description Localidade para o usuário. */
          locale?: ("" | "en_US" | "pt_BR")[];
          /** @description O apelido para o usuário. */
          nickname?: string;
          /** @description Um identificador alfanumérico para o usuário. */
          slug?: string;
          /** @description Funções atribuídas ao usuário. */
          roles?: string[];
          /** @description Senha para o usuário (nunca incluso). */
          password?: string;
          /** @description Campos meta. */
          meta?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users/{user_id}/application-passwords": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          user_id: number;
        };
      };
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: uuid
             * @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
             */
            app_id?: string;
            /** @description O nome da senha da aplicação. */
            name: string;
          };
          "multipart/form-data": {
            /**
             * Format: uuid
             * @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
             */
            app_id?: string;
            /** @description O nome da senha da aplicação. */
            name: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users/{user_id}/application-passwords/introspect": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/users/{user_id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS. */
          app_id?: string;
          /** @description O nome da senha da aplicação. */
          name?: string;
        };
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          user_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: uuid
             * @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
             */
            app_id?: string;
            /** @description O nome da senha da aplicação. */
            name?: string;
          };
          "multipart/form-data": {
            /**
             * Format: uuid
             * @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS.
             */
            app_id?: string;
            /** @description O nome da senha da aplicação. */
            name?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Um UUID fornecido pela aplicação para identificá-la de forma única. Recomenda-se usar o UUID versão 5 com o URL ou namespace DNS. */
          app_id?: string;
          /** @description O nome da senha da aplicação. */
          name?: string;
        };
        path: {
          user_id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/comments": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar resposta para comentários publicados depois de uma determinada data compatível com a norma ISO8601. */
          after?: string;
          /** @description Limitar resultados a comentários atribuídos a IDs de usuários específicos. Requer autorização. */
          author?: number[];
          /** @description Garantir que resultados excluirão comentários atribuídos a IDs de usuários específicos. Requer autorização. */
          author_exclude?: number[];
          /** @description Limitar resultado para e-mails de autores em especifico. Requer autorização. */
          author_email?: string;
          /** @description Limitar resposta para comentários publicados antes de uma determinada data compatível com a norma ISO8601. */
          before?: string;
          /** @description Garantir que o resultado exclua IDs específicos. */
          exclude?: number[];
          /** @description Limitar resultados para IDs específicos. */
          include?: number[];
          /** @description Deslocar o resultado para um número especifico de itens. */
          offset?: number;
          /** @description Ordenar atributos de forma ascendente ou descendente. */
          order?: ("asc" | "desc")[];
          /** @description Ordenar coleção pelo atributo do comentário. */
          orderby?: (
            | "date"
            | "date_gmt"
            | "id"
            | "include"
            | "post"
            | "parent"
            | "type"
          )[];
          /** @description Limitar resultados para comentários cujos ascendentes têm determinados IDs. */
          parent?: number[];
          /** @description Garantir que o resultado exclui IDs de ascendentes específicos. */
          parent_exclude?: number[];
          /** @description Limitar resultados para comentários atribuídos para IDs específicos de post. */
          post?: number[];
          /** @description Limitar resultados para comentários atribuídos a um status específico. Necessita autorização. */
          status?: string;
          /** @description Limitar resultados para comentários atribuídos a um tipo específico. Necessita autorização. */
          type?: string;
          /** @description A senha para o post se este for protegido por senha. */
          password?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do usuário do objeto, se o autor for um usuário.
             */
            author?: number;
            /**
             * Format: email
             * @description Endereço e-mail para o autor do comentário.
             */
            author_email?: string;
            /**
             * Format: ip
             * @description Endereço IP para o autor do comentário.
             */
            author_ip?: string;
            /** @description Nome de exibição para o autor do comentário. */
            author_name?: string;
            /**
             * Format: uri
             * @description URL para o autor do comentário.
             */
            author_url?: string;
            /** @description Agente de usuário para o autor do comentário. */
            author_user_agent?: string;
            /** @description O conteúdo para o comentário. */
            content?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, em GMT.
             */
            date_gmt?: string;
            /**
             * Format: int64
             * @description O ID do item ascendente ao comentário.
             */
            parent?: number;
            /**
             * Format: int64
             * @description O ID para o post associado ao objeto.
             */
            post?: number;
            /** @description Estado do comentário. */
            status?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do usuário do objeto, se o autor for um usuário.
             */
            author?: number;
            /**
             * Format: email
             * @description Endereço e-mail para o autor do comentário.
             */
            author_email?: string;
            /**
             * Format: ip
             * @description Endereço IP para o autor do comentário.
             */
            author_ip?: string;
            /** @description Nome de exibição para o autor do comentário. */
            author_name?: string;
            /**
             * Format: uri
             * @description URL para o autor do comentário.
             */
            author_url?: string;
            /** @description Agente de usuário para o autor do comentário. */
            author_user_agent?: string;
            /** @description O conteúdo para o comentário. */
            content?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, em GMT.
             */
            date_gmt?: string;
            /**
             * Format: int64
             * @description O ID do item ascendente ao comentário.
             */
            parent?: number;
            /**
             * Format: int64
             * @description O ID para o post associado ao objeto.
             */
            post?: number;
            /** @description Estado do comentário. */
            status?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/comments/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A senha do post ascendente ao comentário (se o post for protegido por senha). */
          password?: string;
        };
        path: {
          /** @description Identificador único para o comentário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description O ID do usuário do objeto, se o autor for um usuário. */
          author?: number;
          /** @description Endereço e-mail para o autor do comentário. */
          author_email?: string;
          /** @description Endereço IP para o autor do comentário. */
          author_ip?: string;
          /** @description Nome de exibição para o autor do comentário. */
          author_name?: string;
          /** @description URL para o autor do comentário. */
          author_url?: string;
          /** @description Agente de usuário para o autor do comentário. */
          author_user_agent?: string;
          /** @description O conteúdo para o comentário. */
          content?: string;
          /** @description Data da publicação do comentário, no fuso horário do site. */
          date?: string;
          /** @description Data da publicação do comentário, em GMT. */
          date_gmt?: string;
          /** @description O ID do item ascendente ao comentário. */
          parent?: number;
          /** @description O ID para o post associado ao objeto. */
          post?: number;
          /** @description Estado do comentário. */
          status?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o comentário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o comentário. */
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * Format: int64
             * @description O ID do usuário do objeto, se o autor for um usuário.
             */
            author?: number;
            /**
             * Format: email
             * @description Endereço e-mail para o autor do comentário.
             */
            author_email?: string;
            /**
             * Format: ip
             * @description Endereço IP para o autor do comentário.
             */
            author_ip?: string;
            /** @description Nome de exibição para o autor do comentário. */
            author_name?: string;
            /**
             * Format: uri
             * @description URL para o autor do comentário.
             */
            author_url?: string;
            /** @description Agente de usuário para o autor do comentário. */
            author_user_agent?: string;
            /** @description O conteúdo para o comentário. */
            content?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, em GMT.
             */
            date_gmt?: string;
            /**
             * Format: int64
             * @description O ID do item ascendente ao comentário.
             */
            parent?: number;
            /**
             * Format: int64
             * @description O ID para o post associado ao objeto.
             */
            post?: number;
            /** @description Estado do comentário. */
            status?: string;
            /** @description Campos meta. */
            meta?: string;
          };
          "multipart/form-data": {
            /**
             * Format: int64
             * @description O ID do usuário do objeto, se o autor for um usuário.
             */
            author?: number;
            /**
             * Format: email
             * @description Endereço e-mail para o autor do comentário.
             */
            author_email?: string;
            /**
             * Format: ip
             * @description Endereço IP para o autor do comentário.
             */
            author_ip?: string;
            /** @description Nome de exibição para o autor do comentário. */
            author_name?: string;
            /**
             * Format: uri
             * @description URL para o autor do comentário.
             */
            author_url?: string;
            /** @description Agente de usuário para o autor do comentário. */
            author_user_agent?: string;
            /** @description O conteúdo para o comentário. */
            content?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, no fuso horário do site.
             */
            date?: string;
            /**
             * Format: date-time
             * @description Data da publicação do comentário, em GMT.
             */
            date_gmt?: string;
            /**
             * Format: int64
             * @description O ID do item ascendente ao comentário.
             */
            parent?: number;
            /**
             * Format: int64
             * @description O ID para o post associado ao objeto.
             */
            post?: number;
            /** @description Estado do comentário. */
            status?: string;
            /** @description Campos meta. */
            meta?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Ignorar ou não o envio para a lixeira e forçar a exclusão. */
          force?: boolean;
          /** @description A senha do post ascendente ao comentário (se o post for protegido por senha). */
          password?: string;
        };
        path: {
          /** @description Identificador único para o comentário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description O ID do usuário do objeto, se o autor for um usuário. */
          author?: number;
          /** @description Endereço e-mail para o autor do comentário. */
          author_email?: string;
          /** @description Endereço IP para o autor do comentário. */
          author_ip?: string;
          /** @description Nome de exibição para o autor do comentário. */
          author_name?: string;
          /** @description URL para o autor do comentário. */
          author_url?: string;
          /** @description Agente de usuário para o autor do comentário. */
          author_user_agent?: string;
          /** @description O conteúdo para o comentário. */
          content?: string;
          /** @description Data da publicação do comentário, no fuso horário do site. */
          date?: string;
          /** @description Data da publicação do comentário, em GMT. */
          date_gmt?: string;
          /** @description O ID do item ascendente ao comentário. */
          parent?: number;
          /** @description O ID para o post associado ao objeto. */
          post?: number;
          /** @description Estado do comentário. */
          status?: string;
          /** @description Campos meta. */
          meta?: string;
        };
        path: {
          /** @description Identificador único para o comentário. */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/search": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed")[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limite os resultados aos itens de um tipo de objeto. */
          type?: ("post" | "term" | "post-format")[];
          /** @description Limite os resultados a itens de um ou mais subtipos de objeto. */
          subtype?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/block-renderer/{name}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: "edit"[];
          /** @description Atributos para o bloco. */
          attributes?: string;
          /** @description ID de contexto do post. */
          post_id?: number;
        };
        path: {
          /** @description Nome registrado exclusivo para o bloco. */
          name: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Nome registrado exclusivo para o bloco. */
          name: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
            context?: "edit"[];
            /** @description Atributos para o bloco. */
            attributes?: string;
            /**
             * Format: int64
             * @description ID de contexto do post.
             */
            post_id?: number;
          };
          "multipart/form-data": {
            /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
            context?: "edit"[];
            /** @description Atributos para o bloco. */
            attributes?: string;
            /**
             * Format: int64
             * @description ID de contexto do post.
             */
            post_id?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/block-types": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Namespace do bloco. */
          namespace?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/block-types/{namespace}": {
    get: {
      parameters: {
        query?: {
          /** @description Nome do bloco. */
          name?: string;
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description Namespace do bloco. */
          namespace: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/settings": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Título do site. */
          title?: string;
          /** @description Slogan do site. */
          description?: string;
          /** @description URL do site. */
          url?: string;
          /** @description Este endereço é utilizado para administração, como notificação de novo usuário. */
          email?: string;
          /** @description Uma cidade no mesmo fuso horário que você. */
          timezone?: string;
          /** @description Um formato de data para todos os textos. */
          date_format?: string;
          /** @description Um formato de hora para todos os textos. */
          time_format?: string;
          /** @description Número do dia da semana em que a semana deve iniciar. */
          start_of_week?: number;
          /** @description Código de localização do WordPress. */
          language?: string;
          /** @description Converter emoticons como :-) e :-P em gráficos ao exibí-los. */
          use_smilies?: boolean;
          /** @description Categoria padrão para post. */
          default_category?: number;
          /** @description Formato de post padrão. */
          default_post_format?: string;
          /** @description As páginas do blog mostram no máximo. */
          posts_per_page?: number;
          /** @description Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos. */
          default_ping_status?: ("open" | "closed")[];
          /** @description Permitir que pessoas enviem comentários em novos posts. */
          default_comment_status?: ("open" | "closed")[];
          /** @description Logo do site. */
          site_logo?: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Título do site. */
            title?: string;
            /** @description Slogan do site. */
            description?: string;
            /**
             * Format: uri
             * @description URL do site.
             */
            url?: string;
            /**
             * Format: email
             * @description Este endereço é utilizado para administração, como notificação de novo usuário.
             */
            email?: string;
            /** @description Uma cidade no mesmo fuso horário que você. */
            timezone?: string;
            /** @description Um formato de data para todos os textos. */
            date_format?: string;
            /** @description Um formato de hora para todos os textos. */
            time_format?: string;
            /**
             * Format: int64
             * @description Número do dia da semana em que a semana deve iniciar.
             */
            start_of_week?: number;
            /** @description Código de localização do WordPress. */
            language?: string;
            /** @description Converter emoticons como :-) e :-P em gráficos ao exibí-los. */
            use_smilies?: boolean;
            /**
             * Format: int64
             * @description Categoria padrão para post.
             */
            default_category?: number;
            /** @description Formato de post padrão. */
            default_post_format?: string;
            /**
             * Format: int64
             * @description As páginas do blog mostram no máximo.
             */
            posts_per_page?: number;
            /** @description Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos. */
            default_ping_status?: ("open" | "closed")[];
            /** @description Permitir que pessoas enviem comentários em novos posts. */
            default_comment_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description Logo do site.
             */
            site_logo?: number;
          };
          "multipart/form-data": {
            /** @description Título do site. */
            title?: string;
            /** @description Slogan do site. */
            description?: string;
            /**
             * Format: uri
             * @description URL do site.
             */
            url?: string;
            /**
             * Format: email
             * @description Este endereço é utilizado para administração, como notificação de novo usuário.
             */
            email?: string;
            /** @description Uma cidade no mesmo fuso horário que você. */
            timezone?: string;
            /** @description Um formato de data para todos os textos. */
            date_format?: string;
            /** @description Um formato de hora para todos os textos. */
            time_format?: string;
            /**
             * Format: int64
             * @description Número do dia da semana em que a semana deve iniciar.
             */
            start_of_week?: number;
            /** @description Código de localização do WordPress. */
            language?: string;
            /** @description Converter emoticons como :-) e :-P em gráficos ao exibí-los. */
            use_smilies?: boolean;
            /**
             * Format: int64
             * @description Categoria padrão para post.
             */
            default_category?: number;
            /** @description Formato de post padrão. */
            default_post_format?: string;
            /**
             * Format: int64
             * @description As páginas do blog mostram no máximo.
             */
            posts_per_page?: number;
            /** @description Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos. */
            default_ping_status?: ("open" | "closed")[];
            /** @description Permitir que pessoas enviem comentários em novos posts. */
            default_comment_status?: ("open" | "closed")[];
            /**
             * Format: int64
             * @description Logo do site.
             */
            site_logo?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Título do site. */
          title?: string;
          /** @description Slogan do site. */
          description?: string;
          /** @description URL do site. */
          url?: string;
          /** @description Este endereço é utilizado para administração, como notificação de novo usuário. */
          email?: string;
          /** @description Uma cidade no mesmo fuso horário que você. */
          timezone?: string;
          /** @description Um formato de data para todos os textos. */
          date_format?: string;
          /** @description Um formato de hora para todos os textos. */
          time_format?: string;
          /** @description Número do dia da semana em que a semana deve iniciar. */
          start_of_week?: number;
          /** @description Código de localização do WordPress. */
          language?: string;
          /** @description Converter emoticons como :-) e :-P em gráficos ao exibí-los. */
          use_smilies?: boolean;
          /** @description Categoria padrão para post. */
          default_category?: number;
          /** @description Formato de post padrão. */
          default_post_format?: string;
          /** @description As páginas do blog mostram no máximo. */
          posts_per_page?: number;
          /** @description Permitir avisos de links de outros blogs (pingbacks ou trackbacks) em novos artigos. */
          default_ping_status?: ("open" | "closed")[];
          /** @description Permitir que pessoas enviem comentários em novos posts. */
          default_comment_status?: ("open" | "closed")[];
          /** @description Logo do site. */
          site_logo?: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/themes": {
    get: {
      parameters: {
        query?: {
          /** @description Limitar resultados a temas com um ou mais status atribuídos. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/themes/{stylesheet}": {
    get: {
      parameters: {
        path: {
          /** @description A folha de estilos do tema. Isso identifica exclusivamente o tema. */
          stylesheet: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/plugins": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limita os resultados a plugins com o status especificado. */
          status?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description slug do diretório de plugins do WordPress.org */
            slug: string;
            /** @description O status de ativação do plugin */
            status?: ("inactive" | "active")[];
          };
          "multipart/form-data": {
            /** @description slug do diretório de plugins do WordPress.org */
            slug: string;
            /** @description O status de ativação do plugin */
            status?: ("inactive" | "active")[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/plugins/{plugin}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          plugin: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description O status de ativação do plugin */
          status?: ("inactive" | "active")[];
        };
        path: {
          plugin: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          plugin: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
            context?: ("view" | "embed" | "edit")[];
            /** @description O status de ativação do plugin */
            status?: ("inactive" | "active")[];
          };
          "multipart/form-data": {
            /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
            context?: ("view" | "embed" | "edit")[];
            /** @description O status de ativação do plugin */
            status?: ("inactive" | "active")[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          plugin: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description O status de ativação do plugin */
          status?: ("inactive" | "active")[];
        };
        path: {
          plugin: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/sidebars": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/sidebars/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O ID de uma barra lateral registrada */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description Widgets aninhados. */
          widgets?: unknown[];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Widgets aninhados. */
            widgets?: unknown[];
          };
          "multipart/form-data": {
            /** @description Widgets aninhados. */
            widgets?: unknown[];
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description Widgets aninhados. */
          widgets?: unknown[];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/widget-types": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/widget-types/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          /** @description O id do tipo de widget. */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/widget-types/{id}/encode": {
    post: {
      parameters: {
        path: {
          /** @description O id do tipo de widget. */
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Configurações da instância atual do widget. */
            instance?: string;
            /** @description Configurações da instância serializados */
            form_data?: string;
          };
          "multipart/form-data": {
            /** @description Configurações da instância atual do widget. */
            instance?: string;
            /** @description Configurações da instância serializados */
            form_data?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/widgets": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
          /** @description A barra lateral de onde se deseja retornar os widgets. */
          sidebar?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Identificador único para o widget. */
            id?: string;
            /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
            id_base?: string;
            /** @description A barra lateral a que o widget pertence. */
            sidebar: string;
            /** @description Configurações da instância do widget, se suportado. */
            instance?: string;
            /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
            form_data?: string;
          };
          "multipart/form-data": {
            /** @description Identificador único para o widget. */
            id?: string;
            /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
            id_base?: string;
            /** @description A barra lateral a que o widget pertence. */
            sidebar: string;
            /** @description Configurações da instância do widget, se suportado. */
            instance?: string;
            /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
            form_data?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/widgets/{id}": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed" | "edit")[];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        query?: {
          /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
          id_base?: string;
          /** @description A barra lateral a que o widget pertence. */
          sidebar?: string;
          /** @description Configurações da instância do widget, se suportado. */
          instance?: string;
          /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
          form_data?: string;
        };
        path: {
          /** @description Identificador único para o widget. */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          /** @description Identificador único para o widget. */
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
            id_base?: string;
            /** @description A barra lateral a que o widget pertence. */
            sidebar?: string;
            /** @description Configurações da instância do widget, se suportado. */
            instance?: string;
            /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
            form_data?: string;
          };
          "multipart/form-data": {
            /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
            id_base?: string;
            /** @description A barra lateral a que o widget pertence. */
            sidebar?: string;
            /** @description Configurações da instância do widget, se suportado. */
            instance?: string;
            /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
            form_data?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          /** @description Se deve-se forçar a remoção do widget ou movê-lo para a barra lateral inativa. */
          force?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        query?: {
          /** @description O tipo do widget. Corresponde ao ID no endpoint widget-types. */
          id_base?: string;
          /** @description A barra lateral a que o widget pertence. */
          sidebar?: string;
          /** @description Configurações da instância do widget, se suportado. */
          instance?: string;
          /** @description Dados no formato URL-encoded do formulário de administração do widget. Usado para atualizar um widget que não permite ser instanciado. Apenas escrita. */
          form_data?: string;
        };
        path: {
          /** @description Identificador único para o widget. */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/block-directory/search": {
    get: {
      parameters: {
        query: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: "view"[];
          /** @description Página atual da coleção. */
          page?: number;
          /** @description Número máximo de itens retornados no resultado. */
          per_page?: number;
          /** @description Limitar resultados a blocos correspondentes ao termo da pesquisa. */
          term: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/wp/v2/pattern-directory/patterns": {
    get: {
      parameters: {
        query?: {
          /** @description Escopo sob qual a requisição é feita, determina os campos presentes na resposta. */
          context?: ("view" | "embed")[];
          /** @description Limitar resultados para aqueles que combinam com um texto. */
          search?: string;
          /** @description Limitar resultados para aqueles que combinam com o ID de uma categoria. */
          category?: number;
          /** @description Limitar resultados para aqueles que combinam com um ID de palavra-chave. */
          keyword?: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/file_size": {
    get: {
      parameters: {
        query: {
          /** @description The url to retrieve */
          url: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/statistics": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/alerts/dismiss": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            key: string;
          };
          "multipart/form-data": {
            key: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/workouts/site_representation": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            company_or_person: ("company" | "person")[];
            company_name?: string;
            company_logo?: string;
            /** Format: int64 */
            company_logo_id?: number;
            person_logo?: string;
            /** Format: int64 */
            person_logo_id?: number;
            /** Format: int64 */
            company_or_person_user_id?: number;
            description?: string;
          };
          "multipart/form-data": {
            company_or_person: ("company" | "person")[];
            company_name?: string;
            company_logo?: string;
            /** Format: int64 */
            company_logo_id?: number;
            person_logo?: string;
            /** Format: int64 */
            person_logo_id?: number;
            /** Format: int64 */
            company_or_person_user_id?: number;
            description?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/workouts/social_profiles": {
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            facebook_site?: string;
            twitter_site?: string;
            instagram_url?: string;
            linkedin_url?: string;
            myspace_url?: string;
            pinterest_url?: string;
            youtube_url?: string;
            wikipedia_url?: string;
          };
          "multipart/form-data": {
            facebook_site?: string;
            twitter_site?: string;
            instagram_url?: string;
            linkedin_url?: string;
            myspace_url?: string;
            pinterest_url?: string;
            youtube_url?: string;
            wikipedia_url?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/workouts/enable_tracking": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            tracking: boolean;
          };
          "multipart/form-data": {
            tracking: boolean;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/get_head": {
    get: {
      parameters: {
        query: {
          url: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/posts": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/terms": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/post-type-archives": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/general": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/prepare": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/indexables-complete": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/indexing/complete": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/link-indexing/posts": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/link-indexing/terms": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/semrush/authenticate": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            code: string;
          };
          "multipart/form-data": {
            code: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/semrush/country_code": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            country_code: string;
          };
          "multipart/form-data": {
            country_code: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/semrush/related_keyphrases": {
    get: {
      parameters: {
        query: {
          keyphrase: string;
          country_code: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/wincher/authorization-url": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/wincher/authenticate": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            code: string;
            websiteId: string;
          };
          "multipart/form-data": {
            code: string;
            websiteId: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/wincher/keyphrases/track": {
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            keyphrases: string;
          };
          "multipart/form-data": {
            keyphrases: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/wincher/keyphrases": {
    post: {
      requestBody?: {
        content: {
          "application/x-www-form-urlencoded": {
            keyphrases?: string;
            permalink?: string;
          };
          "multipart/form-data": {
            keyphrases?: string;
            permalink?: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/wincher/keyphrases/untrack": {
    delete: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/yoast/v1/workouts": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            configuration: string;
          };
          "multipart/form-data": {
            configuration: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/jwt-auth/v1/token": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/jwt-auth/v1/token/validate": {
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/contact-form-7/v1/contact-forms": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/contact-form-7/v1/contact-forms/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/contact-form-7/v1/contact-forms/{id}/feedback": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
  "/contact-form-7/v1/contact-forms/{id}/refill": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {};
        };
        /** @description Bad Request */
        400: {
          content: {};
        };
        /** @description Not Found */
        404: {
          content: {};
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
